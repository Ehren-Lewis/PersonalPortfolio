 :root {
    /* Definitions for default salmon color on certain words 
    and default alternating background color */
    --textColor: salmon;
    --altBackgroundColor: rgb(113, 165, 185);
 }
 
 * {
    margin: 0;
    padding: 0;
    scroll-behavior: smooth;
}

/* Tried creating a default flex define class that could
Have as many styling and cover as many classes, but
all styling of classes is semi unique, some have 2 of 3
properties, the other have a different 2 of 3 properties */

/* Header styling */
header {
    min-height: 50px;
    width: 100%;
    margin-bottom: 10px;
    display: flex;
    align-items: center;
    box-shadow: 0 1px 3px 0 rgb(146, 140, 140);
}

/* Removes default list style design */
header ul {
    width: inherit;
    list-style: none;
    display: inherit;
    justify-content: space-around;
}

header ul li {
    display: inline;
}

/* Removes default anchor design */
header ul li a {
    text-decoration: none;
    border-bottom: 2px solid var(--textColor);
}

/* Specified for header ul li to not conflict with footer anchors. */

header ul li a:link {
    color:black;
}

header ul li a:visited {
    color: black;
}

.introduction {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
}

.name {
    width: 50%;
    padding-bottom: 50px;
    text-align: center;
    font-size: 4.3rem;
    color: var(--textColor);
}


.img-avatar {
    transform: rotate(-45deg);
}

.img-desc {
    font-size: large;
    padding-top: 25px;
    text-align: center;
    width: 50vh;
    color: white;
}   

main {
    margin-top: 55px;
    padding: 50px;
    display: flex;
    flex-direction: column;
    align-items: center;
    background-color: var(--altBackgroundColor);
}


/* ID so it can be targeted by href */
#about-me {
    width:max-content;
    font-size: 4.3rem;
    color: var(--textColor);
    border-bottom: 3px solid var(--textColor);
}


#my-work {
    padding-top: 50px;
    display: flex;
    justify-content: center;
    font-size: 4.3rem;
    text-align: center;
    color: var(--textColor);

}

/* Trying to put the p decoration in the parent isnt working */
#my-work p {
    width:max-content;
    border-bottom: 3px solid var(--textColor);
}



/* Grid system for the project section, designed with grid template area to be responsive */
.work-container {
    min-height: 300px;
    padding: 50px 0;
    display: grid;
    grid-template-columns: 25% 25% 25% 25%;
    grid-template-areas:
    "a b b c"
    "e f g h"
    "i j k l";
    row-gap: 2ch;

}

.align {
    display: flex;
    justify-self: center; /*Only until I get the Dune picture in */
    justify-content: center;
    
}

.project-title {
    padding: 0 15px;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 2.3rem;
    text-align: center; 
    color: var(--textColor);
}

.img-text {
    display: flex;
    align-items: center;
    text-align: center;
    color:rgb(114, 86, 86);
}


/* Only until I get the dune image, might change to just img for width and height */
.project-img {
    width: 200px;
    height: 200px;
    background-color: var(--textColor);
}


/* Mass row and column definition so each class will line up with a certain section */
.row-1-col-1 {
    grid-area: a;
}

.row-1-col-2 {
    grid-area: b;
}

.row-1-col-3 {
    grid-area: c;
}

.row-2-col-2 {
    grid-area: f;
}

.row-2-col-3 {
    grid-area: g;
}

.row-2-col-4 {
    grid-area: h;
}

.row-3-col-1 {
    grid-area: i;
}
.row-3-col-2 {
    grid-area: j;
}

.row-3-col-3 {
    grid-area: k;
}

.contact-container {
    min-height: 300px;
    display: flex;
    flex-direction: column;
    align-items: center;
    background-color: var(--altBackgroundColor);
}

/* ID for href direction */
#contact-me {
    width:max-content;
    margin-top: 25px;  
    font-size: 4.3rem;
    color: var(--textColor);
    border-bottom: 3px solid var(--textColor);     
}

/* Form styling to fit the theme */
.contact-form {
    width: 50%;
    margin: 50px 0;
    padding: 15px 15px 25px 15px;
    font-size: 2rem;
    color: var(--textColor);
    border: 2px solid var(--textColor);
}

.contact-form input {
    width: 100%;
    height: 2rem;
}

.form-button {
    margin: 10px auto 0;
    padding: 2px;
    font-size: 1.5rem;
    color: var(--textColor);
    background-color: transparent;
    border-radius: 2px;
    border: 2px solid var(--textColor);
}

.button-wrapper {
    text-align: center;
}

.form-button:hover {
    cursor: pointer;
}

footer {
    width: 100%;
    min-height: 50px;
    height: 100px;
    position: static;
    bottom: 0;
    left: 0;
    display: flex;
    justify-content: space-around;
    align-items: center;
    background-color: rgb(87, 128, 143);
}

/* Changes font awesome class color */
.fa {
    color: var(--textColor);
}

/* Only media needed so far, around 810 pixels was when the project area fell apart
Makes it to where the columns and rows become only columns, done by using
pure css, so the row and column definitoin is needed since there are no removing classes */
@media screen and (max-width: 810px) {
     .work-container {
        margin: 0 30px;
        padding: 50px 0;
        min-height: 300px;
        display: grid;
        grid-template-columns: 100%;
        grid-template-areas: 
        "a"
        "b"
        "c"
        "h"
        "g"
        "f"
        "i"
        "j"
        "k";
    }
}